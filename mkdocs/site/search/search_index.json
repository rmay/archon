{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! What is Archon? I was inspired by DHH's Omarchy early versions, pre-ISO, when it was a collection of Bash scripts. While I wanted Arch , I didn't want Wayland, at all. I took his ideas and started my own project. Archon uses Arch , but instead of Wayland, I'm using X11 and Window Maker . This is not for the casual computer user, this is for people that like computers as tinkering machines but still want get stuff done. It comes pre-installed with shells, a few development tools, Docker, Chromium, Brave, LibreOffice, basically everything needed to get started developing. It's a mix of TUI and GUI elements, wrangled together to present a more cohesive whole than what comes out of the box. If you want something much more polished, check out DHH's Omakub or Omarchy . Both are stellar projects and I promise you won't hurt my feelings if you choose one or the other. Still with me? Let's do this. Brief install instructions for the busy developer Burn the Arch iso to a thumbdrive. Here the installation settings that have been worked for me: Archinstall Language -- default Locales -- default Mirrors and repositories -> Select region -> United States Disk configuration -> Partitioning -> Use a best-effort default partition layout -> Filesystem -> btrfs -> Use BTRFS subvolumes with a default structure -> Yes -> Use Compression Swap -- default Bootloader -- default Unified kernel image -- default Hostname -> change to your hostname Root password -> change to what you want User account -> Add your user account here -> make yourself a superuser Profile -- default Audio -> pipewire Kernels -- default Network configuration -> Use NetworkManager (this has worked for me the best) Additional packages -> /wget Timezone -> set to your timezone Automatic time sync (NTP -- default) After rebooting into your fresh Arch install, run this command (that's a capital \"o\", not a zero): wget -qO- https://solarvoid.com/archon | bash This will set up the base system with all the default settings. Once that's done, the system will reboot and present you with a login screen. Login again with your Arch user, and welcome to the cutting edge of retro-future 90's! I've been mostly developing on a VM, but I have tried it on real hardware and I am slowly making it my primary non-work development environment. Just one more Bash script, bro. What's in the box? Here's a partial list of what it comes with out of the box: Window Maker and some extras A curated Window Maker menu Window Maker set up for 4 workspaces. You access them quickly by Super+<n> or by using the mouse wheel on the root window. The clip in the upper right corner shows the current workspace and lets you move through them by clicking the arrows. You can move a window to a workspace with Super+ctrl+<n> Four terminals: Ghostty, Alacritty, xterm, and st, with the last one being built from source during install. The default terminal is currently Ghostty. Two browsers: Brave and Chromium, with the latter the default. Three file managers: Nautilus, Thunar, and Ranger in a terminal. Development tools: VSCode, neovim using LazyVim for the defaults, gVim, and Doom Emacs. Docker and a TUI with lazydocker LibreOffice Two pdf viewers: Evince and xPdf Loqseq Nextcloud Gimp VLC mpv Rofi and dmenu I've also taken DHH's command line tool and changed it. In the terminal, run: archon You can set the default terminal between the ones listed, change the curated theme to one I've copied from DHH, and install one of the three programming languages I'm currently supporting as extras: Go, Ruby, Java, SBCL with Quicklisp, and Squeak. C, C++, and Python are already there, with versions 20.1.8, 15.1.1, and 3.13.5 respectively, as of this writing (September 2025). I'm using mise-en-place to manage Ruby and Go. First time using it and I'm interested to see how it shakes out. In addition to the default keyboard shortcuts offered by Window Maker, I'm using xbindkeys. A few shortcuts: Super+Return starts the default terminal. Super+Return+Shift starts xterm, just in case. Super+~ starts dmenu Super+space starts rofi See Shortcuts for more details. But, why? I want a stable, repeatable experience in Linux. I've tried a bunch of stuff over the years, but nothing really gelled. I've liked things from all sorts of places, but never in a complete package. And while not perfect, I have a fondness for the 90's computer aesthetic. And I wanted to do just do a thing. Arch for the packages and a rolling update to keep things fresh. X11 because it is still a better system than Wayland. Not flashier, but battle-hardened and proven. Window Maker because the asthetic is solid, it's lightweight, and I like it, despite being so old. C/C++ to compile all the things. Ruby because it's a great language. Go because it's the best get stuff done language I've found. Squeak Smalltalk because the concepts are from a future we could have had. Java because it runs everything. SBCL because if you don't have some half-started Common Lisp app buried somewhere are you really trying? Neovim because it's hip. Doom Emacs because it's not. LazyDocker because the desktop version is really heavy and the plain cli tool is a pain when you only use it occasionally. LazyGit because it's really slick and easy to use.","title":"Home"},{"location":"#welcome","text":"","title":"Welcome!"},{"location":"#what-is-archon","text":"I was inspired by DHH's Omarchy early versions, pre-ISO, when it was a collection of Bash scripts. While I wanted Arch , I didn't want Wayland, at all. I took his ideas and started my own project. Archon uses Arch , but instead of Wayland, I'm using X11 and Window Maker . This is not for the casual computer user, this is for people that like computers as tinkering machines but still want get stuff done. It comes pre-installed with shells, a few development tools, Docker, Chromium, Brave, LibreOffice, basically everything needed to get started developing. It's a mix of TUI and GUI elements, wrangled together to present a more cohesive whole than what comes out of the box. If you want something much more polished, check out DHH's Omakub or Omarchy . Both are stellar projects and I promise you won't hurt my feelings if you choose one or the other. Still with me? Let's do this.","title":"What is Archon?"},{"location":"#brief-install-instructions-for-the-busy-developer","text":"Burn the Arch iso to a thumbdrive. Here the installation settings that have been worked for me: Archinstall Language -- default Locales -- default Mirrors and repositories -> Select region -> United States Disk configuration -> Partitioning -> Use a best-effort default partition layout -> Filesystem -> btrfs -> Use BTRFS subvolumes with a default structure -> Yes -> Use Compression Swap -- default Bootloader -- default Unified kernel image -- default Hostname -> change to your hostname Root password -> change to what you want User account -> Add your user account here -> make yourself a superuser Profile -- default Audio -> pipewire Kernels -- default Network configuration -> Use NetworkManager (this has worked for me the best) Additional packages -> /wget Timezone -> set to your timezone Automatic time sync (NTP -- default) After rebooting into your fresh Arch install, run this command (that's a capital \"o\", not a zero): wget -qO- https://solarvoid.com/archon | bash This will set up the base system with all the default settings. Once that's done, the system will reboot and present you with a login screen. Login again with your Arch user, and welcome to the cutting edge of retro-future 90's! I've been mostly developing on a VM, but I have tried it on real hardware and I am slowly making it my primary non-work development environment. Just one more Bash script, bro.","title":"Brief install instructions for the busy developer"},{"location":"#whats-in-the-box","text":"Here's a partial list of what it comes with out of the box: Window Maker and some extras A curated Window Maker menu Window Maker set up for 4 workspaces. You access them quickly by Super+<n> or by using the mouse wheel on the root window. The clip in the upper right corner shows the current workspace and lets you move through them by clicking the arrows. You can move a window to a workspace with Super+ctrl+<n> Four terminals: Ghostty, Alacritty, xterm, and st, with the last one being built from source during install. The default terminal is currently Ghostty. Two browsers: Brave and Chromium, with the latter the default. Three file managers: Nautilus, Thunar, and Ranger in a terminal. Development tools: VSCode, neovim using LazyVim for the defaults, gVim, and Doom Emacs. Docker and a TUI with lazydocker LibreOffice Two pdf viewers: Evince and xPdf Loqseq Nextcloud Gimp VLC mpv Rofi and dmenu I've also taken DHH's command line tool and changed it. In the terminal, run: archon You can set the default terminal between the ones listed, change the curated theme to one I've copied from DHH, and install one of the three programming languages I'm currently supporting as extras: Go, Ruby, Java, SBCL with Quicklisp, and Squeak. C, C++, and Python are already there, with versions 20.1.8, 15.1.1, and 3.13.5 respectively, as of this writing (September 2025). I'm using mise-en-place to manage Ruby and Go. First time using it and I'm interested to see how it shakes out. In addition to the default keyboard shortcuts offered by Window Maker, I'm using xbindkeys. A few shortcuts: Super+Return starts the default terminal. Super+Return+Shift starts xterm, just in case. Super+~ starts dmenu Super+space starts rofi See Shortcuts for more details.","title":"What's in the box?"},{"location":"#but-why","text":"I want a stable, repeatable experience in Linux. I've tried a bunch of stuff over the years, but nothing really gelled. I've liked things from all sorts of places, but never in a complete package. And while not perfect, I have a fondness for the 90's computer aesthetic. And I wanted to do just do a thing. Arch for the packages and a rolling update to keep things fresh. X11 because it is still a better system than Wayland. Not flashier, but battle-hardened and proven. Window Maker because the asthetic is solid, it's lightweight, and I like it, despite being so old. C/C++ to compile all the things. Ruby because it's a great language. Go because it's the best get stuff done language I've found. Squeak Smalltalk because the concepts are from a future we could have had. Java because it runs everything. SBCL because if you don't have some half-started Common Lisp app buried somewhere are you really trying? Neovim because it's hip. Doom Emacs because it's not. LazyDocker because the desktop version is really heavy and the plain cli tool is a pain when you only use it occasionally. LazyGit because it's really slick and easy to use.","title":"But, why?"},{"location":"hardwarereqs/","text":"Hardware requirements Low. If you bought anything new in the past 10 years, odds are it'll run Archon. Take, for instance, all those machines running Windows 10 but can't run Windows 11 because MS reasons. Archon will run happily on anything with a couple of cores and 2 gigs of RAM and at least 20 gigs of storage. If you can install Arch on it, that's half the battle.","title":"Hardware Requirements"},{"location":"hardwarereqs/#hardware-requirements","text":"Low. If you bought anything new in the past 10 years, odds are it'll run Archon. Take, for instance, all those machines running Windows 10 but can't run Windows 11 because MS reasons. Archon will run happily on anything with a couple of cores and 2 gigs of RAM and at least 20 gigs of storage. If you can install Arch on it, that's half the battle.","title":"Hardware requirements"},{"location":"shortcuts/","text":"Shortcuts xbindkeys Arhcon terminal \"archon-terminal\" Mod4 + Return Archon dmenu launcher \"archon_dmenu_run\" Mod4 + grave Archon rofi launcher \"rofi -show run\" Mod4 + space X terminal \"xterm\" Shift + Mod4 + Return PrintScreen \u2192 region screenshot \"flameshot gui\" Alt + F10 Shift+PrintScreen \u2192 full screen \"flameshot full -p ~/Pictures\" Alt + F11 Ctrl+PrintScreen \u2192 active window \"flameshot screen -p ~/Pictures\" Alt + F12 Window Maker additional shortcuts Workspace1Key \"Mod4+1\" Workspace2Key \"Mod4+2\" Workspace3Key \"Mod4+3\" Workspace4Key \"Mod4+4\" MoveToWorkspace1Key \"Control+Mod4+1\" MoveToWorkspace2Key Control+Mod4+2\" MoveToWorkspace3Key \"Control+Mod4+3\" MoveToWorkspace4Key \"Control+Mod4+4\" LHMaximizeKey This maximizes the focused window on the left hand side of the screen \"Mod4+Left\" RHMaximizeKey This maximizes the focused window on the right hand side of the screen \"Mod4+Right\" MaximizeKey \"Mod4+Up\"","title":"Shortcuts"},{"location":"shortcuts/#shortcuts","text":"","title":"Shortcuts"},{"location":"shortcuts/#xbindkeys","text":"","title":"xbindkeys"},{"location":"shortcuts/#arhcon-terminal","text":"\"archon-terminal\" Mod4 + Return","title":"Arhcon terminal"},{"location":"shortcuts/#archon-dmenu-launcher","text":"\"archon_dmenu_run\" Mod4 + grave","title":"Archon dmenu launcher"},{"location":"shortcuts/#archon-rofi-launcher","text":"\"rofi -show run\" Mod4 + space","title":"Archon rofi launcher"},{"location":"shortcuts/#x-terminal","text":"\"xterm\" Shift + Mod4 + Return","title":"X terminal"},{"location":"shortcuts/#printscreen-region-screenshot","text":"\"flameshot gui\" Alt + F10","title":"PrintScreen \u2192 region screenshot"},{"location":"shortcuts/#shiftprintscreen-full-screen","text":"\"flameshot full -p ~/Pictures\" Alt + F11","title":"Shift+PrintScreen \u2192 full screen"},{"location":"shortcuts/#ctrlprintscreen-active-window","text":"\"flameshot screen -p ~/Pictures\" Alt + F12","title":"Ctrl+PrintScreen \u2192 active window"},{"location":"shortcuts/#window-maker-additional-shortcuts","text":"","title":"Window Maker additional shortcuts"},{"location":"shortcuts/#workspace1key","text":"\"Mod4+1\"","title":"Workspace1Key"},{"location":"shortcuts/#workspace2key","text":"\"Mod4+2\"","title":"Workspace2Key"},{"location":"shortcuts/#workspace3key","text":"\"Mod4+3\"","title":"Workspace3Key"},{"location":"shortcuts/#workspace4key","text":"\"Mod4+4\"","title":"Workspace4Key"},{"location":"shortcuts/#movetoworkspace1key","text":"\"Control+Mod4+1\"","title":"MoveToWorkspace1Key"},{"location":"shortcuts/#movetoworkspace2key","text":"Control+Mod4+2\"","title":"MoveToWorkspace2Key"},{"location":"shortcuts/#movetoworkspace3key","text":"\"Control+Mod4+3\"","title":"MoveToWorkspace3Key"},{"location":"shortcuts/#movetoworkspace4key","text":"\"Control+Mod4+4\"","title":"MoveToWorkspace4Key"},{"location":"shortcuts/#lhmaximizekey","text":"This maximizes the focused window on the left hand side of the screen \"Mod4+Left\"","title":"LHMaximizeKey"},{"location":"shortcuts/#rhmaximizekey","text":"This maximizes the focused window on the right hand side of the screen \"Mod4+Right\"","title":"RHMaximizeKey"},{"location":"shortcuts/#maximizekey","text":"\"Mod4+Up\"","title":"MaximizeKey"},{"location":"screenshots/","text":"Screenshots Offered for your elucidation and amusment. Fresh install first boot showing the default Tokyo Night theme. Default menu. Fastfetch details. Lazyvim in Ghostty and lazygit in Alacritty.","title":"Screenshots"},{"location":"screenshots/#screenshots","text":"Offered for your elucidation and amusment. Fresh install first boot showing the default Tokyo Night theme. Default menu. Fastfetch details. Lazyvim in Ghostty and lazygit in Alacritty.","title":"Screenshots"}]}